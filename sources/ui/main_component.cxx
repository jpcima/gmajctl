// generated by Fast Light User Interface Designer (fluid) version 1.0304

#include "app_i18n.h"
#include "main_component.h"
#include "association.h"
#include "model/patch.h"
#include "model/parameter.h"

void Main_Component::cb_btn_import_i(Fl_Button*, void*) {
  on_clicked_import();
}
void Main_Component::cb_btn_import(Fl_Button* o, void* v) {
  ((Main_Component*)(o->parent()))->cb_btn_import_i(o,v);
}

void Main_Component::cb_btn_export_i(Fl_Button*, void*) {
  on_clicked_export();
}
void Main_Component::cb_btn_export(Fl_Button* o, void* v) {
  ((Main_Component*)(o->parent()))->cb_btn_export_i(o,v);
}

void Main_Component::cb_br_bank_i(Fl_Hold_Browser*, void*) {
  on_selected_patch();
}
void Main_Component::cb_br_bank(Fl_Hold_Browser* o, void* v) {
  ((Main_Component*)(o->parent()))->cb_br_bank_i(o,v);
}

void Main_Component::cb_ch_midi_out_i(Fl_Choice*, void*) {
  on_changed_midi_out();
}
void Main_Component::cb_ch_midi_out(Fl_Choice* o, void* v) {
  ((Main_Component*)(o->parent()))->cb_ch_midi_out_i(o,v);
}

void Main_Component::cb_btn_change_i(Fl_Button*, void*) {
  on_clicked_change();
}
void Main_Component::cb_btn_change(Fl_Button* o, void* v) {
  ((Main_Component*)(o->parent()))->cb_btn_change_i(o,v);
}

void Main_Component::cb_btn_send_i(Fl_Button*, void*) {
  on_clicked_send();
}
void Main_Component::cb_btn_send(Fl_Button* o, void* v) {
  ((Main_Component*)(o->parent()))->cb_btn_send_i(o,v);
}
Main_Component::Main_Component(int X, int Y, int W, int H, const char *L)
  : Fl_Group(X, Y, W, H, L) {
{ Fl_Box* o = new Fl_Box(700, 1, 300, 39, _("Toto Major"));
  o->box(FL_UP_BOX);
  o->labeltype(FL_SHADOW_LABEL);
  o->labelsize(28);
} // Fl_Box* o
{ btn_import = new Fl_Button(525, 80, 70, 20, _("Import"));
  btn_import->labelsize(12);
  btn_import->callback((Fl_Callback*)cb_btn_import);
} // Fl_Button* btn_import
{ btn_export = new Fl_Button(595, 80, 70, 20, _("Export"));
  btn_export->labelsize(12);
  btn_export->callback((Fl_Callback*)cb_btn_export);
} // Fl_Button* btn_export
{ br_bank = new Fl_Hold_Browser(345, 30, 180, 70);
  br_bank->box(FL_NO_BOX);
  br_bank->color(FL_BACKGROUND2_COLOR);
  br_bank->selection_color(FL_SELECTION_COLOR);
  br_bank->labeltype(FL_NORMAL_LABEL);
  br_bank->labelfont(0);
  br_bank->labelsize(12);
  br_bank->labelcolor(FL_FOREGROUND_COLOR);
  br_bank->textsize(12);
  br_bank->callback((Fl_Callback*)cb_br_bank);
  br_bank->align(Fl_Align(FL_ALIGN_BOTTOM));
  br_bank->when(FL_WHEN_RELEASE_ALWAYS);
} // Fl_Hold_Browser* br_bank
{ ch_midi_out = new Fl_Choice(695, 85, 220, 20);
  ch_midi_out->down_box(FL_BORDER_BOX);
  ch_midi_out->labelsize(12);
  ch_midi_out->textsize(12);
  ch_midi_out->callback((Fl_Callback*)cb_ch_midi_out);
} // Fl_Choice* ch_midi_out
{ btn_change = new Fl_Button(560, 60, 70, 20, _("Change"));
  btn_change->labelsize(12);
  btn_change->callback((Fl_Callback*)cb_btn_change);
} // Fl_Button* btn_change
{ Fl_Group* o = new Fl_Group(5, 110, 261, 225);
  o->box(FL_THIN_UP_BOX);
  { chk_noise_gate = new Fl_Check_Button(6, 111, 128, 23, _("Noise gate"));
    chk_noise_gate->down_box(FL_DOWN_BOX);
    chk_noise_gate->labelsize(12);
  } // Fl_Check_Button* chk_noise_gate
  { box_ng1 = new Fl_Group(10, 135, 60, 60);
    box_ng1->box(FL_BORDER_BOX);
    box_ng1->end();
  } // Fl_Group* box_ng1
  { box_ng2 = new Fl_Group(70, 135, 60, 60);
    box_ng2->box(FL_BORDER_BOX);
    box_ng2->end();
  } // Fl_Group* box_ng2
  { box_ng3 = new Fl_Group(10, 200, 60, 60);
    box_ng3->box(FL_BORDER_BOX);
    box_ng3->end();
  } // Fl_Group* box_ng3
  { box_ng4 = new Fl_Group(70, 200, 60, 60);
    box_ng4->box(FL_BORDER_BOX);
    box_ng4->end();
  } // Fl_Group* box_ng4
  { box_ng5 = new Fl_Group(10, 265, 60, 60);
    box_ng5->box(FL_BORDER_BOX);
    box_ng5->end();
  } // Fl_Group* box_ng5
  { box_ng6 = new Fl_Group(70, 265, 60, 60);
    box_ng6->box(FL_BORDER_BOX);
    box_ng6->end();
  } // Fl_Group* box_ng6
  { Fl_Group* o = new Fl_Group(135, 110, 131, 225);
    o->box(FL_THIN_UP_BOX);
    { chk_compressor = new Fl_Check_Button(136, 111, 128, 23, _("Compressor"));
      chk_compressor->down_box(FL_DOWN_BOX);
      chk_compressor->labelsize(12);
    } // Fl_Check_Button* chk_compressor
    { box_cpr1 = new Fl_Group(140, 135, 60, 60);
      box_cpr1->box(FL_BORDER_BOX);
      box_cpr1->end();
    } // Fl_Group* box_cpr1
    { box_cpr2 = new Fl_Group(200, 135, 60, 60);
      box_cpr2->box(FL_BORDER_BOX);
      box_cpr2->end();
    } // Fl_Group* box_cpr2
    { box_cpr3 = new Fl_Group(140, 200, 60, 60);
      box_cpr3->box(FL_BORDER_BOX);
      box_cpr3->end();
    } // Fl_Group* box_cpr3
    { box_cpr4 = new Fl_Group(200, 200, 60, 60);
      box_cpr4->box(FL_BORDER_BOX);
      box_cpr4->end();
    } // Fl_Group* box_cpr4
    { box_cpr5 = new Fl_Group(140, 265, 60, 60);
      box_cpr5->box(FL_BORDER_BOX);
      box_cpr5->end();
    } // Fl_Group* box_cpr5
    { box_cpr6 = new Fl_Group(200, 265, 60, 60);
      box_cpr6->box(FL_BORDER_BOX);
      box_cpr6->end();
    } // Fl_Group* box_cpr6
    o->end();
  } // Fl_Group* o
  o->end();
} // Fl_Group* o
{ Fl_Group* o = new Fl_Group(5, 335, 261, 285);
  o->box(FL_THIN_UP_BOX);
  { chk_equalizer = new Fl_Check_Button(6, 336, 258, 23, _("Equalizer"));
    chk_equalizer->down_box(FL_DOWN_BOX);
    chk_equalizer->labelsize(12);
  } // Fl_Check_Button* chk_equalizer
  { box_eq1 = new Fl_Group(25, 360, 60, 60);
    box_eq1->box(FL_BORDER_BOX);
    box_eq1->end();
  } // Fl_Group* box_eq1
  { box_eq2 = new Fl_Group(105, 360, 60, 60);
    box_eq2->box(FL_BORDER_BOX);
    box_eq2->end();
  } // Fl_Group* box_eq2
  { box_eq4 = new Fl_Group(25, 425, 60, 60);
    box_eq4->box(FL_BORDER_BOX);
    box_eq4->end();
  } // Fl_Group* box_eq4
  { box_eq5 = new Fl_Group(105, 425, 60, 60);
    box_eq5->box(FL_BORDER_BOX);
    box_eq5->end();
  } // Fl_Group* box_eq5
  { box_eq7 = new Fl_Group(25, 490, 60, 60);
    box_eq7->box(FL_BORDER_BOX);
    box_eq7->end();
  } // Fl_Group* box_eq7
  { box_eq8 = new Fl_Group(105, 490, 60, 60);
    box_eq8->box(FL_BORDER_BOX);
    box_eq8->end();
  } // Fl_Group* box_eq8
  { box_eq3 = new Fl_Group(185, 360, 60, 60);
    box_eq3->box(FL_BORDER_BOX);
    box_eq3->end();
  } // Fl_Group* box_eq3
  { box_eq6 = new Fl_Group(185, 425, 60, 60);
    box_eq6->box(FL_BORDER_BOX);
    box_eq6->end();
  } // Fl_Group* box_eq6
  { box_eq9 = new Fl_Group(185, 490, 60, 60);
    box_eq9->box(FL_BORDER_BOX);
    box_eq9->end();
  } // Fl_Group* box_eq9
  o->end();
} // Fl_Group* o
{ Fl_Group* o = new Fl_Group(265, 110, 131, 510);
  o->box(FL_THIN_UP_BOX);
  { chk_filter = new Fl_Check_Button(266, 111, 128, 23, _("Filter"));
    chk_filter->down_box(FL_DOWN_BOX);
    chk_filter->labelsize(12);
  } // Fl_Check_Button* chk_filter
  { box_flt1 = new Fl_Group(270, 160, 60, 60);
    box_flt1->box(FL_BORDER_BOX);
    box_flt1->end();
  } // Fl_Group* box_flt1
  { box_flt2 = new Fl_Group(330, 160, 60, 60);
    box_flt2->box(FL_BORDER_BOX);
    box_flt2->end();
  } // Fl_Group* box_flt2
  { box_flt3 = new Fl_Group(270, 225, 60, 60);
    box_flt3->box(FL_BORDER_BOX);
    box_flt3->end();
  } // Fl_Group* box_flt3
  { box_flt4 = new Fl_Group(330, 225, 60, 60);
    box_flt4->box(FL_BORDER_BOX);
    box_flt4->end();
  } // Fl_Group* box_flt4
  { box_flt5 = new Fl_Group(270, 290, 60, 60);
    box_flt5->box(FL_BORDER_BOX);
    box_flt5->end();
  } // Fl_Group* box_flt5
  { box_flt6 = new Fl_Group(330, 290, 60, 60);
    box_flt6->box(FL_BORDER_BOX);
    box_flt6->end();
  } // Fl_Group* box_flt6
  { box_flt7 = new Fl_Group(270, 355, 60, 60);
    box_flt7->box(FL_BORDER_BOX);
    box_flt7->end();
  } // Fl_Group* box_flt7
  { box_flt8 = new Fl_Group(330, 355, 60, 60);
    box_flt8->box(FL_BORDER_BOX);
    box_flt8->end();
  } // Fl_Group* box_flt8
  { box_flt9 = new Fl_Group(270, 420, 60, 60);
    box_flt9->box(FL_BORDER_BOX);
    box_flt9->end();
  } // Fl_Group* box_flt9
  { box_flt10 = new Fl_Group(330, 420, 60, 60);
    box_flt10->box(FL_BORDER_BOX);
    box_flt10->end();
  } // Fl_Group* box_flt10
  { box_flt11 = new Fl_Group(270, 485, 60, 60);
    box_flt11->box(FL_BORDER_BOX);
    box_flt11->end();
  } // Fl_Group* box_flt11
  { box_flt12 = new Fl_Group(330, 485, 60, 60);
    box_flt12->box(FL_BORDER_BOX);
    box_flt12->end();
  } // Fl_Group* box_flt12
  { box_flt13 = new Fl_Group(270, 550, 60, 60);
    box_flt13->box(FL_BORDER_BOX);
    box_flt13->end();
  } // Fl_Group* box_flt13
  { box_flt14 = new Fl_Group(330, 550, 60, 60);
    box_flt14->box(FL_BORDER_BOX);
    box_flt14->end();
  } // Fl_Group* box_flt14
  { cb_filter = new Fl_Choice(270, 135, 120, 20);
    cb_filter->down_box(FL_BORDER_BOX);
    cb_filter->labelsize(12);
    cb_filter->textsize(12);
  } // Fl_Choice* cb_filter
  o->end();
} // Fl_Group* o
{ Fl_Group* o = new Fl_Group(395, 110, 131, 510);
  o->box(FL_THIN_UP_BOX);
  { chk_pitch = new Fl_Check_Button(396, 111, 128, 23, _("Pitch"));
    chk_pitch->down_box(FL_DOWN_BOX);
    chk_pitch->labelsize(12);
  } // Fl_Check_Button* chk_pitch
  { box_pit1 = new Fl_Group(400, 160, 60, 60);
    box_pit1->box(FL_BORDER_BOX);
    box_pit1->end();
  } // Fl_Group* box_pit1
  { box_pit2 = new Fl_Group(460, 160, 60, 60);
    box_pit2->box(FL_BORDER_BOX);
    box_pit2->end();
  } // Fl_Group* box_pit2
  { box_pit3 = new Fl_Group(400, 225, 60, 60);
    box_pit3->box(FL_BORDER_BOX);
    box_pit3->end();
  } // Fl_Group* box_pit3
  { box_pit4 = new Fl_Group(460, 225, 60, 60);
    box_pit4->box(FL_BORDER_BOX);
    box_pit4->end();
  } // Fl_Group* box_pit4
  { box_pit5 = new Fl_Group(400, 290, 60, 60);
    box_pit5->box(FL_BORDER_BOX);
    box_pit5->end();
  } // Fl_Group* box_pit5
  { box_pit6 = new Fl_Group(460, 290, 60, 60);
    box_pit6->box(FL_BORDER_BOX);
    box_pit6->end();
  } // Fl_Group* box_pit6
  { box_pit7 = new Fl_Group(400, 355, 60, 60);
    box_pit7->box(FL_BORDER_BOX);
    box_pit7->end();
  } // Fl_Group* box_pit7
  { box_pit8 = new Fl_Group(460, 355, 60, 60);
    box_pit8->box(FL_BORDER_BOX);
    box_pit8->end();
  } // Fl_Group* box_pit8
  { box_pit9 = new Fl_Group(400, 420, 60, 60);
    box_pit9->box(FL_BORDER_BOX);
    box_pit9->end();
  } // Fl_Group* box_pit9
  { box_pit10 = new Fl_Group(460, 420, 60, 60);
    box_pit10->box(FL_BORDER_BOX);
    box_pit10->end();
  } // Fl_Group* box_pit10
  { box_pit11 = new Fl_Group(400, 485, 60, 60);
    box_pit11->box(FL_BORDER_BOX);
    box_pit11->end();
  } // Fl_Group* box_pit11
  { box_pit12 = new Fl_Group(460, 485, 60, 60);
    box_pit12->box(FL_BORDER_BOX);
    box_pit12->end();
  } // Fl_Group* box_pit12
  { box_pit13 = new Fl_Group(400, 550, 60, 60);
    box_pit13->box(FL_BORDER_BOX);
    box_pit13->end();
  } // Fl_Group* box_pit13
  { box_pit14 = new Fl_Group(460, 550, 60, 60);
    box_pit14->box(FL_BORDER_BOX);
    box_pit14->end();
  } // Fl_Group* box_pit14
  { cb_pitch = new Fl_Choice(400, 135, 120, 20);
    cb_pitch->down_box(FL_BORDER_BOX);
    cb_pitch->labelsize(12);
    cb_pitch->textsize(12);
  } // Fl_Choice* cb_pitch
  o->end();
} // Fl_Group* o
{ Fl_Group* o = new Fl_Group(525, 110, 391, 510);
  o->box(FL_THIN_UP_BOX);
  { chk_chorus = new Fl_Check_Button(526, 111, 128, 23, _("Chorus/Flanger"));
    chk_chorus->down_box(FL_DOWN_BOX);
    chk_chorus->labelsize(12);
  } // Fl_Check_Button* chk_chorus
  { box_cho1 = new Fl_Group(530, 160, 60, 60);
    box_cho1->box(FL_BORDER_BOX);
    box_cho1->end();
  } // Fl_Group* box_cho1
  { box_cho2 = new Fl_Group(590, 160, 60, 60);
    box_cho2->box(FL_BORDER_BOX);
    box_cho2->end();
  } // Fl_Group* box_cho2
  { box_cho3 = new Fl_Group(530, 225, 60, 60);
    box_cho3->box(FL_BORDER_BOX);
    box_cho3->end();
  } // Fl_Group* box_cho3
  { box_cho4 = new Fl_Group(590, 225, 60, 60);
    box_cho4->box(FL_BORDER_BOX);
    box_cho4->end();
  } // Fl_Group* box_cho4
  { box_cho5 = new Fl_Group(530, 290, 60, 60);
    box_cho5->box(FL_BORDER_BOX);
    box_cho5->end();
  } // Fl_Group* box_cho5
  { box_cho6 = new Fl_Group(590, 290, 60, 60);
    box_cho6->box(FL_BORDER_BOX);
    box_cho6->end();
  } // Fl_Group* box_cho6
  { box_cho7 = new Fl_Group(530, 355, 60, 60);
    box_cho7->box(FL_BORDER_BOX);
    box_cho7->end();
  } // Fl_Group* box_cho7
  { box_cho8 = new Fl_Group(590, 355, 60, 60);
    box_cho8->box(FL_BORDER_BOX);
    box_cho8->end();
  } // Fl_Group* box_cho8
  { box_cho9 = new Fl_Group(530, 420, 60, 60);
    box_cho9->box(FL_BORDER_BOX);
    box_cho9->end();
  } // Fl_Group* box_cho9
  { box_cho10 = new Fl_Group(590, 420, 60, 60);
    box_cho10->box(FL_BORDER_BOX);
    box_cho10->end();
  } // Fl_Group* box_cho10
  { box_cho11 = new Fl_Group(530, 485, 60, 60);
    box_cho11->box(FL_BORDER_BOX);
    box_cho11->end();
  } // Fl_Group* box_cho11
  { box_cho12 = new Fl_Group(590, 485, 60, 60);
    box_cho12->box(FL_BORDER_BOX);
    box_cho12->end();
  } // Fl_Group* box_cho12
  { box_cho13 = new Fl_Group(530, 550, 60, 60);
    box_cho13->box(FL_BORDER_BOX);
    box_cho13->end();
  } // Fl_Group* box_cho13
  { box_cho14 = new Fl_Group(590, 550, 60, 60);
    box_cho14->box(FL_BORDER_BOX);
    box_cho14->end();
  } // Fl_Group* box_cho14
  { cb_chorus = new Fl_Choice(530, 135, 120, 20);
    cb_chorus->down_box(FL_BORDER_BOX);
    cb_chorus->labelsize(12);
    cb_chorus->textsize(12);
  } // Fl_Choice* cb_chorus
  { Fl_Group* o = new Fl_Group(655, 110, 261, 510);
    o->box(FL_THIN_UP_BOX);
    { chk_delay = new Fl_Check_Button(656, 111, 128, 23, _("Delay"));
      chk_delay->down_box(FL_DOWN_BOX);
      chk_delay->labelsize(12);
    } // Fl_Check_Button* chk_delay
    { box_del1 = new Fl_Group(660, 160, 60, 60);
      box_del1->box(FL_BORDER_BOX);
      box_del1->end();
    } // Fl_Group* box_del1
    { box_del2 = new Fl_Group(720, 160, 60, 60);
      box_del2->box(FL_BORDER_BOX);
      box_del2->end();
    } // Fl_Group* box_del2
    { box_del3 = new Fl_Group(660, 225, 60, 60);
      box_del3->box(FL_BORDER_BOX);
      box_del3->end();
    } // Fl_Group* box_del3
    { box_del4 = new Fl_Group(720, 225, 60, 60);
      box_del4->box(FL_BORDER_BOX);
      box_del4->end();
    } // Fl_Group* box_del4
    { box_del5 = new Fl_Group(660, 290, 60, 60);
      box_del5->box(FL_BORDER_BOX);
      box_del5->end();
    } // Fl_Group* box_del5
    { box_del6 = new Fl_Group(720, 290, 60, 60);
      box_del6->box(FL_BORDER_BOX);
      box_del6->end();
    } // Fl_Group* box_del6
    { box_del7 = new Fl_Group(660, 355, 60, 60);
      box_del7->box(FL_BORDER_BOX);
      box_del7->end();
    } // Fl_Group* box_del7
    { box_del8 = new Fl_Group(720, 355, 60, 60);
      box_del8->box(FL_BORDER_BOX);
      box_del8->end();
    } // Fl_Group* box_del8
    { box_del9 = new Fl_Group(660, 420, 60, 60);
      box_del9->box(FL_BORDER_BOX);
      box_del9->end();
    } // Fl_Group* box_del9
    { box_del10 = new Fl_Group(720, 420, 60, 60);
      box_del10->box(FL_BORDER_BOX);
      box_del10->end();
    } // Fl_Group* box_del10
    { box_del11 = new Fl_Group(660, 485, 60, 60);
      box_del11->box(FL_BORDER_BOX);
      box_del11->end();
    } // Fl_Group* box_del11
    { box_del12 = new Fl_Group(720, 485, 60, 60);
      box_del12->box(FL_BORDER_BOX);
      box_del12->end();
    } // Fl_Group* box_del12
    { box_del13 = new Fl_Group(660, 550, 60, 60);
      box_del13->box(FL_BORDER_BOX);
      box_del13->end();
    } // Fl_Group* box_del13
    { box_del14 = new Fl_Group(720, 550, 60, 60);
      box_del14->box(FL_BORDER_BOX);
      box_del14->end();
    } // Fl_Group* box_del14
    { cb_delay = new Fl_Choice(660, 135, 120, 20);
      cb_delay->down_box(FL_BORDER_BOX);
      cb_delay->labelsize(12);
      cb_delay->textsize(12);
    } // Fl_Choice* cb_delay
    { Fl_Group* o = new Fl_Group(785, 110, 131, 510);
      o->box(FL_THIN_UP_BOX);
      { chk_reverb = new Fl_Check_Button(786, 111, 128, 23, _("Reverb"));
        chk_reverb->down_box(FL_DOWN_BOX);
        chk_reverb->labelsize(12);
      } // Fl_Check_Button* chk_reverb
      { box_rev1 = new Fl_Group(790, 160, 60, 60);
        box_rev1->box(FL_BORDER_BOX);
        box_rev1->end();
      } // Fl_Group* box_rev1
      { box_rev2 = new Fl_Group(850, 160, 60, 60);
        box_rev2->box(FL_BORDER_BOX);
        box_rev2->end();
      } // Fl_Group* box_rev2
      { box_rev3 = new Fl_Group(790, 225, 60, 60);
        box_rev3->box(FL_BORDER_BOX);
        box_rev3->end();
      } // Fl_Group* box_rev3
      { box_rev4 = new Fl_Group(850, 225, 60, 60);
        box_rev4->box(FL_BORDER_BOX);
        box_rev4->end();
      } // Fl_Group* box_rev4
      { box_rev5 = new Fl_Group(790, 290, 60, 60);
        box_rev5->box(FL_BORDER_BOX);
        box_rev5->end();
      } // Fl_Group* box_rev5
      { box_rev6 = new Fl_Group(850, 290, 60, 60);
        box_rev6->box(FL_BORDER_BOX);
        box_rev6->end();
      } // Fl_Group* box_rev6
      { box_rev7 = new Fl_Group(790, 355, 60, 60);
        box_rev7->box(FL_BORDER_BOX);
        box_rev7->end();
      } // Fl_Group* box_rev7
      { box_rev8 = new Fl_Group(850, 355, 60, 60);
        box_rev8->box(FL_BORDER_BOX);
        box_rev8->end();
      } // Fl_Group* box_rev8
      { box_rev9 = new Fl_Group(790, 420, 60, 60);
        box_rev9->box(FL_BORDER_BOX);
        box_rev9->end();
      } // Fl_Group* box_rev9
      { box_rev10 = new Fl_Group(850, 420, 60, 60);
        box_rev10->box(FL_BORDER_BOX);
        box_rev10->end();
      } // Fl_Group* box_rev10
      { box_rev11 = new Fl_Group(790, 485, 60, 60);
        box_rev11->box(FL_BORDER_BOX);
        box_rev11->end();
      } // Fl_Group* box_rev11
      { box_rev12 = new Fl_Group(850, 485, 60, 60);
        box_rev12->box(FL_BORDER_BOX);
        box_rev12->end();
      } // Fl_Group* box_rev12
      { box_rev13 = new Fl_Group(790, 550, 60, 60);
        box_rev13->box(FL_BORDER_BOX);
        box_rev13->end();
      } // Fl_Group* box_rev13
      { box_rev14 = new Fl_Group(850, 550, 60, 60);
        box_rev14->box(FL_BORDER_BOX);
        box_rev14->end();
      } // Fl_Group* box_rev14
      { cb_reverb = new Fl_Choice(790, 135, 120, 20);
        cb_reverb->down_box(FL_BORDER_BOX);
        cb_reverb->labelsize(12);
        cb_reverb->textsize(12);
      } // Fl_Choice* cb_reverb
      o->end();
    } // Fl_Group* o
    o->end();
  } // Fl_Group* o
  o->end();
} // Fl_Group* o
{ btn_send = new Fl_Button(920, 85, 70, 20, _("Send"));
  btn_send->labelsize(12);
  btn_send->callback((Fl_Callback*)cb_btn_send);
} // Fl_Button* btn_send
{ Fl_Box* o = new Fl_Box(695, 60, 140, 25, _("Midi Out Devices:"));
  o->labelsize(12);
  o->align(Fl_Align(FL_ALIGN_LEFT|FL_ALIGN_INSIDE));
} // Fl_Box* o
init();
end();
}
